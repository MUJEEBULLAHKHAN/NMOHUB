export interface JobDetails {
    jobId: number;
    vehicleMake: string;
    vehicleModel: string;
    regNo: string;
    roNumber: string;
    drNumber: string;
    claimNumber: string;
    status: string;
    damageReportNumber: string;
    repairOrderNumber: string;
    assessmentNumber: string;
    assessmentGuid: string;
    orderNumber: string;
    isAuthorised: boolean;
    jobDate: Date | null; // Use Date or null for nullable dates
    scheduledBookInDate: Date | null;
    scheduledCompletionDate: Date | null;
    jobType: string;
    jobTypeId: number;
    serviceAdvisorId: number;
    serviceAdvisorName: string;
    serviceAdvisorLastName: string;
    estimatorId: number;
    estimatorName: string;
    estimatorLastName: string;
    uploadedBy: string;
    uploadedById: number;
    insuranceCompanyName: string;
    insuranceEmail: string;
    insuranceContact: string;
    insuranceVatNumber: string;
    insuranceCompanyId: number | null;
    insuranceClaimNumber: string;
    vehicleMakeId: number;
    vehicleModelId: number;
    vehicleYear: number;
    vehicleRegistration: string;
    vehicleVIN: string;
    vehicleMileage: number;
    vehicleColor: string;
    vehicleColorId: number;
    vehicleWarranty: boolean;
    vehicleDrivable: boolean;
    vehicleTowed: boolean;
    isTotalLoss: boolean;
    clientName: string;
    clientLastName: string;
    clientEmail: string;
    clientMobileNumber: string;
    clientCsiConsent: boolean;
    clientAlternateNumber: string;
    clientEntityName: string;
    brokerName: string;
    brokerEmail: string;
    brokerContactNumber: string;
    brokerId: number;
    assessorName: string;
    assessorBuisnessName: string;
    assessorEmail: string;
    assessorMobile: string;
    claimHandlerName: string;
    claimHandlerEmail: string;
    claimHandlerContactNumber: string;
    excessAmount: number;
    excessOptionOnePercent: number;
    excessOptionOneMinimum: number;
    excessOptionTwoPercent: number;
    excessOptionTwoMinimum: number;
    excessWaiver: boolean;
    excessOptionOneTotalCalculatedValue: number;
    excessOptionTwoTotalCalculatedValue: number;
    grandTotalOfAllExcessAmounts: number;
    isSelected: boolean;
  }
